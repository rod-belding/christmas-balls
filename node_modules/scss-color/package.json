{
  "_args": [
    [
      "scss-color@github:tjbenton/scss-color",
      "/Users/michaelsither/Sites/personal/christmas-balls"
    ]
  ],
  "_from": "tjbenton/scss-color",
  "_id": "scss-color@1.0.3",
  "_inCache": true,
  "_installable": true,
  "_location": "/scss-color",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/tjbenton/scss-color/master/package.json",
      "gitUrl": "git://github.com/tjbenton/scss-color.git",
      "httpsUrl": "git+https://github.com/tjbenton/scss-color.git",
      "shortcut": "github:tjbenton/scss-color",
      "ssh": "git@github.com:tjbenton/scss-color.git",
      "sshUrl": "git+ssh://git@github.com/tjbenton/scss-color.git",
      "type": "github"
    },
    "name": "scss-color",
    "raw": "scss-color@github:tjbenton/scss-color",
    "rawSpec": "github:tjbenton/scss-color",
    "scope": null,
    "spec": "github:tjbenton/scss-color",
    "type": "hosted"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "git://github.com/tjbenton/scss-color.git#5930c80cb668e71cc92f2f79e4a4efff79769fb6",
  "_shasum": "f766dece26ca0c33f9ea6fe1768f19621bfa5b55",
  "_shrinkwrap": null,
  "_spec": "scss-color@github:tjbenton/scss-color",
  "_where": "/Users/michaelsither/Sites/personal/christmas-balls",
  "author": {
    "email": "tjbenton21@gmail.com",
    "name": "Tyler Benton",
    "url": "https://github.com/tjbenton"
  },
  "bugs": {
    "url": "https://github.com/tjbenton/scss-color/issues"
  },
  "dependencies": {},
  "description": "This makes theming very easy, by giving you the ability to store your colors in seperate namespaces.",
  "devDependencies": {},
  "gitHead": "5930c80cb668e71cc92f2f79e4a4efff79769fb6",
  "homepage": "https://github.com/tjbenton/scss-color#readme",
  "keywords": [
    "theme",
    "namespace",
    "colors",
    "color",
    "variation",
    "variations",
    "sass",
    "scss"
  ],
  "license": "ISC",
  "main": "_colors.scss",
  "name": "scss-color",
  "optionalDependencies": {},
  "readme": "# scss-color\nThis makes theming very easy, by giving you the ability to store your colors in seperate namespaces. It also gives you the flexibility of getting different variations from a base color. But it's simple enough to get a variation of a color value without needing to define a namespace.\n\n\n### `define-color-set($namespace: default, $settings: false, $merge-color-settings: true)`\nThis is used to set the color settings for the default namespace. The main reason this is a seperate mixin is for the simple fact that it increases the performance. Only having to merge the namespace settings with the necessary defaults once is a huge performance increase.\n\n##### $settings options\nThese are the default settings, so if you like these you don't have to define anything.\n```scss\n$settings: (\n base: 0, // defines the base color to look for in the maps(not reccommended to change) this is ment for if you want o define out color names instead of using integers.\n increment: 5%, // this is a fall back increment if the color functions that are defined are lists and not maps\n colors: (), // placeholder for the colors of this namespace\n map: \"integers\", // determins if you're using integers to get your light and dark values or words.(@feature - this hasn't been added yet)\n smart-color: .25, // determins how far you go back if the color is #fff or #000 (example if you called color(#ccc, 25) that will be black but if smart color is set then it will be #060606)\n functions: ( // holds the light and dark functions to use for the different variations. (only light, and dark can be the keys of this map)\n  light: ( // holds the light functions that will run if the variation is less than 0\n   lighten: 5% // this is where you specify different sass color functions, or your own if you have any\n  ),\n  dark: ( // holds the dark functions that will run if the variation is less than 0\n   darken: 5% // this is where you specify different sass color functions, or your own if you have any\n  )\n )\n);\n```\n\n##### Example: How to define default color settings\n\n``` scss\n$color-settings: ( // must be `$color-settings`\n smart-color: .45,\n colors: (\n  primary: (\n   0: #ccc, // base color\n   name: gray // color name of primary(for debug purposes only)\n  ),\n  pink: #c82754 // base color for pink\n )\n);\n@import \"_colors.scss\";\n// define-color-set doesn't need to be called if you define $color-settings (defaults) before you import `_colors.scss` it will automatically merge them.\n```\n\n##### Example: How to define default color settings after you import `_colors.scss`\n``` scss\n$color-settings: (\n smart-color: .45,\n colors: (\n  a: (\n   0: #ccc,\n   name: gray\n  )\n )\n);\n@include define-color-set; // this merges your preferences with the defaults, these will be used for every namespace that you define.\n```\n\n##### Example: How to define a different namespace of colors\n```scss\n@include define-color-set(messaging, (\n  smart-color: .33,\n  colors: (\n   info: (\n    0: #cbe8f5,\n    name: light blue // the name of `#cbe8f5`, it's for debug purposes only\n   )\n  )\n )\n);\n```\n\n\n### `color($this: #000, $variation: 0, $force: false, $save: true, $namespace: \"default\")`\n\n\n##### Example: Get a different variation of a color value\n```scss\n$turquoise: #1abc9c;\ncolor($turquoise, -2.5); // lighter - #33e3c0\ncolor($turquoise, 2.5); // darker - #12846e\n```\n\n##### Example: Using the default theming option of this function\n```scss\n$color-settings: ( \n colors: ( \n  a: ( 0: #ccc, name: gray), \n  b: ( 0: #c82754, name: pink),\n  ...\n )\n); // in your variables file\n \n// in some other file\ncolor(a, -1) // #d9d9d9\ncolor(a) // #ccc\ncolor(a, 1) // #bfbfbf\n```\n\n##### Example: Getting colors from a specific namespace\n```\n// define the namespace for the messaging colors\n@include define-color-set(messaging, (\n colors: (\n  info: #cbe8f5,\n  error: #b02430,\n  success: #4f6447,\n  warning: #755e32\n )\n));\n@function messaging-color($type, $variation: 0){ // just a helper function to make it easier\n @return color($type, $variation, $namespace: messaging);\n}\nmessaging-color(info, -1) // #e0f1f9\nmessaging-color(info, 0) // #cbe8f5\nmessaging-color(info) // #cbe8f5\nmessaging-color(info, 2.25) // #9bd3ec\n```\n\n@todo add more examples\n\n\n### `console-colors($namespace: \"default\", $to-console: \"colors\")`\n@todo add more examples\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tjbenton/scss-color.git"
  },
  "version": "1.0.3"
}
